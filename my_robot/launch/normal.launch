<?xml version="1.0"?>
  
<launch>
 
<!-- Spawn the robot model -->
  <!--Build URDF file from xarco files-->
  <param name = "robot_description" command ="$(find xacro)/xacro  '$(find my_robot)/urdf/diff_drive.xarco'"/>
  <!-- node pkg="tf" type="static_transform_publisher" name="map_to_base" args="0 0 0 0 0 0 map base_link 30" / -->
  <node pkg = "tf" type = "static_transform_publisher" name = "map_nav_broadcaster" args = "0 0 0 0 0 0  diff_base laser 100" />
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />
  <node pkg="tf" type="static_transform_publisher" name="base_to_diff_base" args="0 0 0 0 0 0 base_link diff_base 30" />

 <!--Publish Odom-->
  <node pkg="my_robot" type="ekf_odom_pub" name="ekf_odom_pub"/>
  <!-- remap from="odom" to="odom_data_quat" / -->

  <!-- Rosserial -->
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="115200"/>
  </node>

  <remap from ="odom" to ="odom_data_quat" />
  <node pkg="robot_pose_ekf" type = "robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value = "odom" />
    <param name="base_footprint_frame" value = "base_link"/>
    <param name="freq" value="30.0"/>
    <param name="odom_used" value = "true"/>
    <param name="imu_used" value = "false"/>
    <!-- remap from="odom" to ="odom_combined"/ -->
    </node>

<!-- Initial Pose and Goal Publisher -->
  <!-- Publish: /initialpose, /move_base_simple/goal -->
  <!-- node pkg="rviz" type="rviz" name="rviz">
  </node -->
    <!-- Subscribe: /initialpose, /move_base_simple/goal -->
  <!-- Publish: /initial_2d, /goal_2d -->
  <node pkg="my_robot" type="rviz_click_to_2d" name="rviz_click_to_2d">
  </node>   
  <!-- node pkg="my_robot" type="initial_pose_publisher" name="initial_pose_publisher"/ -->

  <!--Publish Joinstate to robot_state_publisher-->
  <node pkg="my_robot" type="joint_msg_pub" name="joint_msg_pub"/>
  <!-- Publish the TFs-->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name = "robot_state_publisher" >
    <param name="publish_frequency" type="double" value="50.0"/>
    <!--remap from = "robot_description" to = "diff_drive_description" / -->
  </node>
  
  <!--RP Lidar-->
  <include file = "$(find rplidar_ros)/launch/rplidar.launch"/>
  <!--Hector_Slam-->
  <!-- include file = "$(find hector_slam_launch)/launch/tutorial.launch"/ -->
  <!-- node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output = "screen">
  <param name ="base_frame" value = "diff_base"/>
  <param name ="odom_frame" value ="odom"/>
  <remap from ="scan" to ="/scan"/>
  </node -->
  <node name="map_server" pkg="map_server" type="map_server" args="/home/ubuntu/thuvien.yaml "/>

 <!--- Run AMCL --> 
    <include file="$(find amcl)/examples/amcl_diff.launch" />

   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find my_robot)/include/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find my_robot)/include/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find my_robot)/include/local_costmap_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find my_robot)/include/global_costmap_params.yaml" command="load" ns="global_costmap"/> 
    <rosparam file="$(find my_robot)/include/base_local_planner_params.yaml" command="load" />
   </node>



  <!-- move_base-->

   <!-- master auto="start"/>
 
    <node name="map_server" pkg="map_server" type="map_server" args="/home/ubuntu/map506.yaml "/>

  <include file="$(find amcl)/examples/amcl_diff.launch" />

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find my_robot)/include/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find my_robot)/include/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find my_robot)/include/local_costmap_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find my_robot)/include/global_costmap_params.yaml" command="load" ns="global_costmap"/> 
    <rosparam file="$(find my_robot)/include/base_local_planner_params.yaml" command="load" />
  </node -->  

</launch>

